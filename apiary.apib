FORMAT: 1A
HOST: https://v1.api.dudesolutions.io

GENERATEASYNCCODE: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: FALSE
USECONTROLLERPOSTFIX: FALSE
USEENUMPOSTFIX: FALSE
USECONSTRUCTORSFORCONFIG: TRUE
CSHARPDEFAULTNAMESPACE: DSI.SDK.Unified

# Dude Unified Api
![Dude Solutions](https://dudesolutions.com/assets/img/logo.png)

## Authentication
*Dude Api* uses OAuth v2 Authorization. First you create a new (or acquire existing) OAuth v2 token using [DudeAuth](https://www.dudeauth.com/).

New to *OAuth*?  Check out the [OAuth Bible](http://oauthbible.com/) for good reference material.

## Media Types
Where applicable this API uses the *JSON* media-type to represent resources.

Requests and responses with a message-body use plain JSON to set or update resources.

## Error States
Common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used throughout this API.

In addition to standard response codes the response object returned from the server during an exception event may contain additional information in the following JSON format:

        {
            "message": "SOME MESSAGE",
            "dudeReferenceId": "3523845A-4729-4CCB-9E16-01DEADF6C2DF",
            "stackTrace": "Null, Typically"
        }
        
## Data Restriction
Depending on the access level granted to the calling client certain data elements throughout this API will be removed and not returned.

## Dates & Times
All dates and times are represented in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format.  In addition, *Dude Api* will always provide [Coordinated Universal Time](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).

The API is capable of parsing most date and time formats, however we do require UTC dates and times be provided from all calling systems.  We highly recommend you utilize the ISO-8601 standard when communicating dates and time to the API as well.

## Known Issues
None at this time

## Documentation Notes
In Progress

# Group Assets

IN PROGRESS
-----------

## Business Asset Collection [/accounts/{accountId}/businessassets{?q,parentid,name,description,isactive,businessassettypeid,includedescendants,page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer.
    + q: Sample (string, optional) - Custom query object.
    + parentid: 1 (number, optional) - The ID of the parent as a long.
    + name: Facility (string, optional) - The name of the asset.
    + description: Big Building (string, optional) - The description of the asset.
    + isactive: true (boolean, optional) - Return active or inactive assets?
    + businessassettypeid: 1 (number, optional) - Return assets that match a specific asset type.
    + includedescendants: true (boolean, optional) - Include descendant assets or just the current level?
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: AncestorIdPath asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Business Asset], required)

### POST

+ Request
    + Attributes (Business Asset Create)
    
+ Response 201 (application/json)
    + Attributes (Business Asset)

## Business Asset Detail [/accounts/{accountId}/businessassets/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the business asset in the form on an integer

### GET

+ Response 200 (application/json)
    + Attributes (Business Asset)

### PUT

+ Request
    + Attributes (Business Asset Update)
    
+ Response 200 (application/json)
    + Attributes (Business Asset)

### DELETE

+ Response 204

## Business Asset Type Collection [/accounts/{accountId}/businessassettypes{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Business Asset Type], required)

### POST

+ Request
    + Attributes (Business Asset Type Create)
    
+ Response 201 (application/json)
    + Attributes (Business Asset Type)

## Business Asset Type Detail [/accounts/{accountId}/businessassettypes/{id}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the business asset type in the form on an integer
    
### GET

+ Response 200 (application/json)
    + Attributes (Business Asset Type)

### PUT

+ Request
    + Attributes (Business Asset Type Update)
    
+ Response 200 (application/json)
    + Attributes (Business Asset Type)

# Group Quantities

## Quantities [/quantities{?page,pagesize,orderby}]

### GET

+ Parameters
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + data (required, array[Quantity]) - The Quantity response collection.

## Units of Measure [/quantities/{quantityTypeId}/unitsOfMeasure{?measurementsystem,page,pagesize,orderby}]

+ Parameters
    + quantityTypeId: 12345 (required, number) - ID of the measurement type in the form on an integer
    + measurementsystem: None (optional, enum[string]) - The measurement system to filter
        + `None` - No filter specified
        + `Metric` - Limit to Metric measurements
        + `Imperial`- Limit to Imperial measurements
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: unitKey asc (string, optional) - A string describing the ordering to perform on the collection.

### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + data (required, array[Unit Of Measure]) - The Unit of Measure response collection.

### POST

+ Response 201 (application/json)

# Group Purposes

## Purpose Collection [/accounts/{accountId}/purposes{?page,pagesize,orderby,q,isactive}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    + q (string, optional) - Filter the list by any custom query, when not set returns all.
    + isactive (boolean, optional) - Filter the list by active or inactive items, when not set returns all.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Purpose], required)

### POST

+ Response 201 (application/json)
    + Attributes (Purpose)

## Purpose Detail [/accounts/{accountId}/purposes/{id}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the purpose in the form of an integer

### GET

+ Response 200 (application/json)
    + Attributes (Purpose)

### PUT

+ Response 200 (application/json)
    + Attributes (Purpose)

### DELETE

+ Response 204

## Purpose Detail Status [/accounts/{accountId}/purposes/{id}/active/{status}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the purpose in the form of an integer
    + status: true (required, boolean) - The boolean to change the status of the purpose, either true or false

### PUT

+ Response 200 (application/json)
    + Attributes (Purpose)

# Group Labor Hour Types

## Labor Hour Types Collection [/accounts/{accountId}/laborhourtypes{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Labor Hour Type], required)

### POST

+ Response 201 (application/json)
    + Attributes (Labor Hour Type)
    
## Labor Hour Types Detail [/accounts/{accountId}/laborhourtypes/{id}]

### GET

+ Response 200 (application/json)
    + Attributes (Labor Hour Type)

### PUT

+ Response 200 (application/json)
    + Attributes (Labor Hour Type)

# Group Work Categories

## Work Category Collection [/accounts/{accountId}/workcategories{?page,pagesize,orderby,q,isactive,parentid}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    + q (string, optional) - Filter the list by any custom query, when not set returns all.
    + isactive (boolean, optional) - Filter the list by active or inactive items, when not set returns all.
    + parentid (number, optional) - Filter the list to get all children of a parent, when not set returns all.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Work Category Hierarchy], required)

### POST

+ Response 201 (application/json)
    + Attributes (Work Category Hierarchy)

## Work Category Detail [/accounts/{accountId}/workcategories/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the work category in the form of an integer
    
### GET

+ Response 200 (application/json)
    + Attributes (Work Category Hierarchy)

### PUT

+ Response 200 (application/json)
    + Attributes (Work Category Hierarchy)

### DELETE

+ Response 204

# Group Work Orders

## Work Order Collection [/accounts/{accountId}/workorders{?page,pagesize,orderby,q,actiontaken,assignees,completiondatefrom,completiondateto,createdby,displayid,priority,purpose,requestdatefrom,requestdateto,requestedby,status,workcategory,businessasset}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    + q (string, optional) - A free form filter mechanism.
    + actiontaken: Fixed the chair (string, optional) - Filter by action taken text.
    + assignees: 1 (array[number], optional) - Filter by assignees.
    + completiondatefrom: `2015-01-01T00:00:00.000Z` (string, optional) - Filter by completion date, starting from.
    + completiondateto: `2016-01-01T00:00:00.000Z` (string, optional) - Filter by completion date, until.
    + createdby: 1 (number, optional) - Filter by the user who created the work order.
    + displayid: WO123 (string, optional) - Filter by the display ID of the work order.
    + priority: 1 (array[number], optional) - Filter by the priority of work orders.
    + purpose: 1 (array[number], optional) - Filter by the purpose of work orders.
    + requestdatefrom: `2015-01-01T00:00:00.000Z` (string, optional) - Filter by request date, starting from.
    + requestdateto: `2016-01-01T00:00:00.000Z` (string, optional) - Filter by the request date, until.
    + requestedby: 1 (array[number], optional) - Filter by the work order requester.
    + status: 1 (array[number], optional) - Filter by the work order status.
    + workcategory: 1 (array[number], optional) - Filter by the work category assigned to the work order.
    + businessasset: 1 (array[number], optional) - Filter by the business asset assigned to the work order.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Work Order], required)

### POST

+ Response 201 (application/json)
    + Attributes (Work Order)

## Work Order Detail [/accounts/{accountId}/workorders/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the work order in the form of an integer
    
### GET

+ Response 200 (application/json)
    + Attributes (Work Order)

### PUT

+ Response 200 (application/json)

    + Attributes (Work Order)

### DELETE

+ Response 204

## Work Order Export [/accounts/{accountId}/workorders/{id}/ascsv]

*Deprecated*

### As CSV [GET]

+ Response 200 (text/csv)

## Transaction Collection [/accounts/{accountId}/workorders/{workOrderId}/transactions{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + workOrderId: 12345 (required, number) - ID of the work order in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Work Order Transaction], required)

### POST

+ Response 201 (application/json)
    + Attributes (Work Order Transaction)

## Transaction Detail [/accounts/{accountId}/workorders/{workOrderId}/transactions/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + workOrderId: 12345 (required, number) - ID of the work order in the form of an integer
    + id: 12345 (required, number) - ID of the transaction in the form of an integer
    
### GET

+ Response 200 (application/json)
    + Attributes (Work Order Transaction)

### PUT

+ Response 200 (application/json)
    + Attributes (Work Order Transaction)

### DELETE

+ Response 204

## Attachment Collection [/accounts/{accountId}/workorders/{workOrderId}/attachments{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + workOrderId: 12345 (required, number) - ID of the work order in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Work Order Attachment], required)

### POST

+ Response 201 (application/json)
    + Attributes (Work Order Attachment)

## Attachment Detail [/accounts/{accountId}/workorders/{workOrderId}/attachments/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + workOrderId: 12345 (required, number) - ID of the work order in the form of an integer
    + id: 12345 (required, number) - ID of the attachment in the form of an integer
    
### GET

+ Response 200 (application/json)
    + Attributes (Work Order Attachment)

### DELETE

+ Response 204

## Work Order Template Collection [/accounts/{accountId}/workordertemplates]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer

### POST

+ Request (application/json)
    + Attributes (Work Order Template Create)

+ Response 201 (application/json)
    + Attributes (Work Order Template)
    
### DELETE

+ Response 204

## Work Order Template Detail [/accounts/{accountId}/workordertemplates/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the work order in the form of an integer
    
### GET

+ Response 200 (application/json)
    + Attributes (Work Order Template)

### PUT

+ Request (application/json)
    + Attributes (Work Order Template Update)

+ Response 200 (application/json)

    + Attributes (Work Order)

## Assignee Collection [/accounts/{accountId}/workordertemplates{workOrderTemplateId}/assignees{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (number, required) - ID of the account in the form of an integer
    + workOrderTemplateId: 1 (number, required) - ID of the work order template object who's collection is being referenced
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Base User Object], required)
        
## Assignee Collection Detail [/accounts/{accountId}/workordertemplates{workOrderTemplateId}/assignees/{id}]

### PUT

+ Response 200 (application/json)
    + Attributes (Base User Object)
    
### DELETE

+ Response 204

# Group Health

## Heartbeat [/heartbeat]
The heartbeat is exposed and provided to check for availability of the service.
Any response that does not provide a ```200 OK``` response code should be treated as an error.

### GET

+ Response 200 (application/json)
    + Attributes (Heartbeat)

# Data Structures

## Base Collection Response (object)
+ `page`: 1 (number, required) - The current page provided in the response data.
+ `pageSize`: 1000 (number, required) - The page size returned in the response data.
+ `dataSize`: 1000 (number, required) - The total records returned in the response.
+ `total`: 2000 (number, required) - The total number of records available in the collection.

## Base Audit Object (object)
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was created.
+ `createdByUser` (Base User Object, optional) - Information about the user who created the record.
+ `createdByApiClient` (Base Client Object, optional) - Information about the client who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was last updated.
+ `updatedByUser` (Base User Object, optional) - Information about the user who last modified the record.
+ `updatedByApiClient` (Base Client Object, optional) - Information about the client who last modified the record.

## Base User Object (object)
+ `id`: 1 (number, required) - The ID of the user.
+ `firstName`: John (string, required) - The first name of the user.
+ `lastName`: Smith (string, required) - The last name of the user.
+ `email`: john.smith@dudesolutions.io (string, required) - The email address of the user.

## Base Client Object (object)
+ `id`: 1 (number, required) - The ID of the API client.

## Heartbeat (object)
+ `applicationdbvitalCheck`: true (boolean, required) - Vital check to ensure the data store is online.
+ `cachevitalcheck`: true (boolean, required) - Vital check to ensure the cache store is online.

## Business Asset Create (object)
+ `name`: Main Government Campus (string, required) - Description
+ `description`: The big government campus (string, optional) - Description
+ `notes`: Some notes would go here (string, optional) - Description
+ `isActive`: true (boolean, required) - Description

## Business Asset Update (Business Asset Create)
+ `id`: 1 (number, required) - The ID of the object

## Business Asset (Business Asset Update)
+ `ancestorIdPath`: Sample (string, required) - Description
+ `ancestorNamePath`: Sample (string, required) - Description
+ `hasChildren`: true (boolean, required) - Description
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was created.
+ `createdByUser` (Base User Object, optional) - Information about the user who created the record.
+ `createdByApiClient` (Base Client Object, optional) - Information about the client who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was last updated.
+ `updatedByUser` (Base User Object, optional) - Information about the user who last modified the record.
+ `updatedByApiClient` (Base Client Object, optional) - Information about the client who last modified the record.

## Business Asset Type Create (object)
+ `description`: Bridge (string, required) - The name of the asset type

## Business Asset Type Update (Business Asset Type Create)
+ `id`: 1 (number, required) - The ID of the object

## Business Asset Type (Business Asset Type Update)
+ `isDudeAssetType`: true (boolean, required) - Indicates if this is a common platform asset type
+ `businessAssetAttributeTypeCount`: 4 (number, required) - The number of attributes on this asset type
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was created.
+ `createdByUser` (Base User Object, optional) - Information about the user who created the record.
+ `createdByApiClient` (Base Client Object, optional) - Information about the client who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was last updated.
+ `updatedByUser` (Base User Object, optional) - Information about the user who last modified the record.
+ `updatedByApiClient` (Base Client Object, optional) - Information about the client who last modified the record.

## Business Asset Attribute Type Create (object)
+ `key`: length (string, required) - The name of the attribute type
+ `valueType`: date (enum[string], required) - 
    + `date` - Represents a date/time
    + `double` - Represents a floating point value
    + `integer` - Represents a whole number
    + `money` - Represents a floating point number greater than 0 and two decimal places
    + `string` - Represents a series of characters
    + `boolean` - Represents a true/false value
+ `isActive`: true (boolean, required) - Indicates if the attribute type is active
+ `fieldLength`: 125 (number, optional) - The number of characters allowed for the attribute
+ `quantity` (Quantity Reference, required) - The quantity type
+ `businessAssetAttributeTypeCodes` (array[Business Asset Attribute Type Code], optional) - The type codes

## Business Asset Attribute Type Update (Business Asset Attribute Type Create)
+ `id`: 1 (number, required) - The ID of the object

## Business Asset Attribute Type (Business Asset Attribute Type Update)
+ `quantity` (Quantity, required) - The quantity type
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was created.
+ `createdByUser` (Base User Object, optional) - Information about the user who created the record.
+ `createdByApiClient` (Base Client Object, optional) - Information about the client who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was last updated.
+ `updatedByUser` (Base User Object, optional) - Information about the user who last modified the record.
+ `updatedByApiClient` (Base Client Object, optional) - Information about the client who last modified the record.

## Business Asset Attribute Type Code (object)
+ `id`: 1 (number, required) - The ID of the object
+ `keyCode`: yes (string, required) - The string representation
+ `valueCode`: Yes Sir (string, required) - The display representation of the type code

## Quantity Create (object)
+ `quantity`: Length (string, required) - The name of the quantity type

## Quantity (Quantity Create)
+ `id`: 1 (number, required) - The ID of the quantity.

## Quantity Reference (object)
+ `id`: 1 (number, required) - The ID of the quantity.

## Unit Of Measure (object)
+ `id`: 1 (number, required) - The ID of the unit of measure.
+ `unitKey`: feet (string, required) - The unit of measurement as a string.
+ `measurementSystem`: None (enum[string], required) - The measurement system this unit belongs to.
        + `None` - Not associated with a given measurement system.
        + `Metric` - Limit to Metric measurements.
        + `Imperial`- Limit to Imperial measurements.

## Purpose (Base Audit Object)
+ `id`: 1 (number, required) - The ID of the purpose.
+ `value`: General Maintenance (string, required) - The description of the purpose.
+ `isActive`: true (boolean, required) - Indicates if the purpose is active.

## Labor Hour Type (Base Audit Object)
+ `id`: 1 (number, required) - The ID of the labor hour type.
+ `type`: Regular (string, required) - The name of the labor type.
+ `multiplier`: 1.0 (number, required) - The multiplier associated with the labor type.

## Work Category (Base Audit Object)
+ `id`: 1 (number, required) - The ID of the work category.
+ `value`: Environmental (string, required) - The description of the work category.
+ `isActive`: true (boolean, required) - Indicates if the work category is active.

## Work Category Hierarchy (Work Category)
+ `parent` (Work Category, required) - The parent record for this work category.
+ `childCount`: 0 (number, required) - Indicates how many children the current work category has.

## Work Order Location (object)
`latitude`: 35.729235 (number, required) - The latitude of the location.
`longitude`: -78.799214 (number, required) - The longitude of the location.
`streetAddress`: 11000 Regency Parkway (string, required) - The primary street address of the location.
`streetAddressLine2`: Suite 110 (string, required) - The secondary street address of the location.
`city`: Cary (string, required) - The city of the location.
`region`: North Carolina (string, required) - The primary region of the location.
`postalCode`: 27518 (string, required) - The postal code of the location.
`country`: USA (string, required) - The country of the location.
`latLongMatchesAddress`: true (boolean, required) - Indicates if the location address matches the latitude and longitude coordinates.

## Work Order (Base Audit Object)
+ `id`: 1 (number, required) - The unique identifier of the work order.
+ `displayId`: WO100 (string, required) - The display ID for the work order.
+ `description`: The chair is broken (string, optional) - Text that describes the work order.
+ `status`: 1 (number, required) - The status of a work order, in integer format.
+ `priority`: 2 (number, required) - The priority of a work order, in integer format.
+ `requestDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The requested date and time for the work order.
+ `completionDateTime`:  `2015-01-01T00:00:00.123Z` (string, optional) - The date and time the work order was completed.
+ `actionTaken`: I replaced the bolt (string, optional) - Text that describes what was done to resolve the reported issue.
+ `attachmentCount`: 1 (number, optional) - A count of attachments associated with the work order.
+ `requestedBy` (Base User Object, required) - The user who requested the work order.
+ `purpose` (Purpose, optional) - The purpose assigned to the work order.
+ `workCategory` (Work Category Hierarchy, optional) - The work category assigned to the work order.
+ `businessAsset` (Business Asset, optional) - The business asset assigned to the work order.
+ `assignees` (array[Base User Object], optional) - The users assigned to work on this work order.
+ `location` (Work Order Location, optional) - The location associated with this work order.
+ `dueDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time that the work order is expected to be completed.

## Work Order Attachment (Base Audit Object)
+ `id`: 1 (number, required) - The ID of the work order attachment.
+ `name`: My File (string, required) - The display name for the work order attachment.
+ `fileApiId`: 123 (number, required) - The File Service ID for the attachment.
+ `fileApiViewToken`: abcd12345 (string, required) - The File Service Token to retrieve the attachment.

## Work Order Transaction (Base Audit Object)
+ `id`: 1 (number, required) - The ID of the work order attachment.
+ `description`: The technician did work (string, required) - A short description of the transaction.
+ `transactionDate`: `2015-01-01T01:01:01.123Z` (string, required) - The date and time the transaction occurred.
+ `typeAttributes` (Transaction Type, required) - The details of the transaction.

## Transaction Type (object)
+ `type`: Regular (string, required) - The type of transaction.
+ `cost`: 22.10 (number, required) - The cost for this type of transaction.  Determined by the hourly rate and the transaction type multiplier.

## Work Order Template Create (object)
+ `description`: The chair is broken (string, optional) - Text that describes the work order.
+ `priority`: 2 (number, required) - The priority of a work order, in integer format.
+ `purpose` (Purpose, optional) - The purpose assigned to the work order.
+ `workCategory` (Work Category Hierarchy, optional) - The work category assigned to the work order.
+ `location` (Work Order Location, optional) - The location associated with this work order.
+ `dudeDateOffset`: 1 (number, optional) - The number of days out to set the dudeDateTime

## Work Order Template Update (Work Order Template Create)
+ `id`: 1 (number, required) - The unique identifier of the work order order template.

## Work Order Template (Work Order Template Update)
+ `assigneeCount`: 1 (number, required) The number of assignees that exists for the template
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was created.
+ `createdByUser` (Base User Object, optional) - Information about the user who created the record.
+ `createdByApiClient` (Base Client Object, optional) - Information about the client who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was last updated.
+ `updatedByUser` (Base User Object, optional) - Information about the user who last modified the record.
+ `updatedByApiClient` (Base Client Object, optional) - Information about the client who last modified the record.

