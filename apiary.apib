FORMAT: 1A
HOST: https://v1.api.dudesolutions.io

# Dude Unified Api
![Dude Solutions](https://dudesolutions.com/assets/img/logo.png)

## Authentication
*Dude Api* uses OAuth2 Authorization. First you create a new (or acquire existing) OAuth2 token using [DudeAuth](https://www.dudeauth.com/).

New to *OAuth*?  Check out the [OAuth Bible](http://oauthbible.com/) for good reference material.

## Media Types
Where applicable this API uses the *JSON* media-type to represent resources.

Requests and responses with a message-body use plain JSON to set or update resources.

## Error States
Common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used throughout this API.

In addition to standard response codes the response object returned from the server during an exception event may contain additional information in the following JSON format:

        {
            "message": "SOME MESSAGE",
            "dudeReferenceId": "3523845A-4729-4CCB-9E16-01DEADF6C2DF",
            "stackTrace": "Null, Typically"
        }
        
## Data Restriction
Depending on the access level granted to the calling client certain data elements throughout this API will be removed and not returned.

## Dates & Times
All dates and times are represented in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format.  In addition, *Dude Api* will always provide [Coordinated Universal Time](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).

The API is capable of parsing most date and time formats, however we do require UTC dates and times be provided from all calling systems.  We highly recommend you utilize the ISO-8601 standard when communicating dates and time to the API as well.

## Known Issues
None at this time

## Documentation Notes
In Progress

# Group Assets

## Business Asset Collection [/accounts/{accountId}/businessassets{?q,parentid,name,description,isactive,businessassettypeid,includedescendants,page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer.
    + q: Sample (string, optional) - Custom query object.
    + parentid: 1 (number, optional) - The ID of the parent as a long.
    + name: Facility (string, optional) - The name of the asset.
    + description: Big Building (string, optional) - The description of the asset.
    + isactive: true (boolean, optional) - Return active or inactive assets?
    + businessassettypeid: 1 (number, optional) - Return assets that match a specific asset type.
    + includedescendants: true (boolean, optional) - Include descendant assets or just the current level?
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: AncestorIdPath asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Business Asset], required)

### POST

+ Response 201 (application/json)

## Business Asset Detail [/accounts/{accountId}/businessassets/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the business asset in the form on an integer

### GET

+ Response 200 (application/json)

### PUT

+ Response 200 (application/json)

### DELETE

+ Response 204

## Business Asset Type Collection [/accounts/{accountId}/businessassettypes{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[object], required)

### POST

+ Response 201 (application/json)

## Business Asset Type Detail [/accounts/{accountId}/businessassettypes/{id}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the business asset type in the form on an integer
    
### GET

+ Response 200 (application/json)

### PUT

+ Response 200 (application/json)

# Group Purposes

## Purpose Collection [/accounts/{accountId}/purposes{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[Purpose], required)

### POST

+ Response 201 (application/json)
    + Attributes (Purpose)

## Purpose Detail [/accounts/{accountId}/purposes/{id}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the purpose in the form of an integer

### GET

+ Response 200 (application/json)
    + Attributes (Purpose)

### PUT

+ Response 200 (application/json)
    + Attributes (Purpose)

### DELETE

+ Response 204

## Purpose Detail Status [/accounts/{accountId}/purposes/{id}/active/{status}]

+ Parameters
    + accountId: 1234567890 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the purpose in the form of an integer
    + status: true (required, boolean) - The boolean to change the status of the purpose, either true or false

### PUT

+ Response 200 (application/json)
    + Attributes (Purpose)

# Group Quantities

## Quantities [/quantities{?page,pagesize,orderby}]

### GET

+ Parameters
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + data (required, array[Quantity]) - The Quantity response collection.

## Units of Measure [/quantities/{quantityTypeId}/unitsOfMeasure{?measurementsystem,page,pagesize,orderby}]

+ Parameters
    + quantityTypeId: 12345 (required, number) - ID of the measurement type in the form on an integer
    + measurementsystem: None (optional, enum[string]) - The measurement system to filter
        + `None` - No filter specified
        + `Metric` - Limit to Metric measurements
        + `Imperial`- Limit to Imperial measurements
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: unitKey asc (string, optional) - A string describing the ordering to perform on the collection.

### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + data (required, array[Unit Of Measure]) - The Unit of Measure response collection.

# Group Transactions

## Purchase Transactions [/transactions/purchases]

### POST

+ Response 201 (application/json)

# Group Work Categories

## Work Category Collection [/accounts/{accountId}/workcategories{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[object], required)

### POST

+ Response 201 (application/json)

## Work Category Detail [/accounts/{accountId}/workcategories/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the work category in the form of an integer
    
### GET

+ Response 200 (application/json)

### PUT

+ Response 200 (application/json)

### DELETE

+ Response 204

# Group Work Orders

## Work Order Collection [/accounts/{accountId}/workorders{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[object], required)

### POST

+ Response 201 (application/json)

## Work Order Detail [/accounts/{accountId}/workorders/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + id: 12345 (required, number) - ID of the work order in the form of an integer
    
### GET

+ Response 200 (application/json)

### PUT

+ Response 200 (application/json)

### DELETE

+ Response 204

## Work Order Export [/accounts/{accountId}/workorders/{id}/ascsv]

*Deprecated*

### As CSV [GET]

+ Response 200 (text/csv)

## Work Order Attachment Collection [/accounts/{accountId}/workorders/{workOrderId}/attachments{?page,pagesize,orderby}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + workOrderId: 12345 (required, number) - ID of the work order in the form of an integer
    + page: 1 (number, optional) - The page to request from the collection.
    + pagesize: 1000 (number, optional) - The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    
### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + `data` (array[object], required)

### POST

+ Response 201 (application/json)


## Work Order Attachment Detail [/accounts/{accountId}/workorders/{workOrderId}/attachments/{id}]

+ Parameters
    + accountId: 1 (required, number) - ID of the account in the form of an integer
    + workOrderId: 12345 (required, number) - ID of the work order in the form of an integer
    + id: 12345 (required, number) - ID of the attachment in the form of an integer
    
### GET

+ Response 200 (application/json)

### DELETE

+ Response 204

# Group Health

## Heartbeat [/heartbeat]
The heartbeat is exposed and provided to check for availability of the service.
Any response that does not provide a ```200 OK``` response code should be treated as an error.

### GET

+ Response 200 (application/json)
    + Attributes (Heartbeat)

# Data Structures

## Base Collection Response (object)

### Properties
+ `page`: 1 (number, required) - The current page provided in the response data.
+ `pageSize`: 1000 (number, required) - The page size returned in the response data.
+ `dataSize`: 1000 (number, required) - The total records returned in the response.
+ `total`: 2000 (number, required) - The total number of records available in the collection.

## Base Audit Object (object)
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was created.
+ `createdByUser` (Base User Object, optional) - Information about the user who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - The date and time in ISO-8601 format the record was last updated.
+ `updatedByUser` (Base User Object, optional) - Information about the user who last modified the record.

## Base User Object (object)
+ `id`: 1 (number, required) - The ID of the user.
+ `firstName`: John (string, required) - The first name of the user.
+ `lastName`: Smith (string, required) - The last name of the user.
+ `email`: john.smith@dudesolutions.io (string, required) - The email address of the user.

## Heartbeat (object)
Represents a heartbeat response.

### Properties
+ `applicationdbvitalCheck`: true (boolean, required) - Vital check to ensure the data store is online.
+ `cachevitalcheck`: true (boolean, required) - Vital check to ensure the cache store is online.

## Business Asset (object)
+ `id`: 1, (number, required) - Description
+ `name`: Main Government Campus (string, required) - Description
+ `description`: The big government campus (string, optional) - Description
+ `notes`: Some notes would go here (string, optional) - Description
+ `isActive`: true (boolean, required) - Description
+ `ancestorIdPath`: Sample (string, required) - Description
+ `ancestorNamePath`: Sample (string, required) - Description
+ `hasChildren`: true (boolean, required) - Description
+ `updatedDateTime`: 2015-10-06T17:53:43.99Z (datetime, required) - Description

## Purpose (Base Audit Object)
+ `id`: 1 (number, required) - The ID of the purpose.
+ `value`: General Maintenance (string, required) - The description of the purpose.
+ `isActive`: true (boolean, required) - Indicates if the purpose is active.


## Quantity (object)
+ `id`: 1 (number, required) - The ID of the quantity.
+ `quantity`: Length (string, required) - The name of the quantity type.

## Unit Of Measure (object)
+ `id`: 1 (number, required) - The ID of the unit of measure.
+ `unitKey`: feet (string, required) - The unit of measurement as a string.
+ `measurementSystem`: None (enum[string], required) - The measurement system this unit belongs to.
        + `None` - Not associated with a given measurement system.
        + `Metric` - Limit to Metric measurements.
        + `Imperial`- Limit to Imperial measurements.